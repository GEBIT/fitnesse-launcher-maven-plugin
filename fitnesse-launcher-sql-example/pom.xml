<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>uk.co.javahelp.fitnesse</groupId>
		<artifactId>fitnesse-launcher-parent</artifactId>
		<version>1.2.2-SNAPSHOT</version>
		<relativePath />
	</parent>
	<groupId>uk.co.javahelp.fitnesse</groupId>
	<artifactId>fitnesse-launcher-sql-example</artifactId>
	<version>1.2.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>FitNesse Launcher Plugin - Example SQL Project</name>
	<description>Example configuration for using fitnesse-launcher-maven-plugin in an SQL project.</description>
	<url>http://code.google.com/p/fitnesse-launcher-maven-plugin/wiki/SqlExample</url>

	<scm>
		<url>http://fitnesse-launcher-maven-plugin.googlecode.com/svn/trunk/fitnesse-launcher-sql-example</url>
		<connection>scm:svn:http://fitnesse-launcher-maven-plugin.googlecode.com/svn/trunk/fitnesse-launcher-sql-example</connection>
		<developerConnection>scm:svn:https://fitnesse-launcher-maven-plugin.googlecode.com/svn/trunk/fitnesse-launcher-sql-example</developerConnection>
	</scm>

	<licenses>
		<license>
			<name>Apache License version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- These next 3 are the default values anyway -->
		<fitnesse.port>9123</fitnesse.port>
		<fitnesse.working>${project.build.directory}/fitnesse</fitnesse.working>
		<fitnesse.root>FitNesseRoot</fitnesse.root>
		<!-- This example has no unit tests, just integration tests -->
		<skipTests>true</skipTests>
		<!-- This are properties we may need within our FitNesse tests -->
		<hsqldb.driver>org.hsqldb.jdbc.JDBCDriver</hsqldb.driver>
		<hsqldb.url>jdbc:hsqldb:file:${project.build.directory}/hsqldb;shutdown=true</hsqldb.url>
		<hsqldb.username>sa</hsqldb.username>
		<hsqldb.password>sa</hsqldb.password>
		<hsqldb.version>2.2.9</hsqldb.version>
		<derby.driver>org.apache.derby.jdbc.ClientDriver</derby.driver>
		<derby.url>jdbc:derby://localhost:1527/${project.build.directory}/derbyDB;create=true</derby.url>
		<derby.username>derbyuser</derby.username>
		<derby.password>derbyuser</derby.password>
		<derby.version>10.4.1.3</derby.version>
		<spring.version>3.2.0.RELEASE</spring.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbynet</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>start-derby-network-server</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<java fork="true" spawn="true" classpathref="maven.runtime.classpath" classname="org.apache.derby.drda.NetworkServerControl">
									<arg value="start" />
									<arg value="-noSecurityManager" />
								</java>
								<sleep milliseconds="1000" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>shutdown-derby-network-server</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>org.apache.derby.drda.NetworkServerControl</argument>
								<argument>shutdown</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.derby</groupId>
						<artifactId>derbyclient</artifactId>
						<version>${derby.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>derby</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${derby.driver}</driver>
							<url>${derby.url}</url>
							<username>${derby.username}</username>
							<password>${derby.password}</password>
							<srcFiles>
								<srcFile>src/main/sql/001_init.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<execution>
						<id>hsqldb</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${hsqldb.driver}</driver>
							<url>${hsqldb.url}</url>
							<username>${hsqldb.username}</username>
							<password>${hsqldb.password}</password>
							<srcFiles>
								<srcFile>src/main/sql/001_init.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>uk.co.javahelp.fitnesse</groupId>
				<artifactId>fitnesse-launcher-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<!-- These next 3 are the default values anyway. -->
					<port>${fitnesse.port}</port>
					<workingDir>${fitnesse.working}</workingDir>
					<root>${fitnesse.root}</root>
					<createSymLink>true</createSymLink>
					<suite>SqlExample</suite>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-simple</artifactId>
						<version>1.7.2</version>
					</dependency>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.derby</groupId>
						<artifactId>derbyclient</artifactId>
						<version>${derby.version}</version>
					</dependency>
					<dependency>
						<groupId>net.sf.dbfit</groupId>
						<artifactId>dbfit</artifactId>
						<version>1.1.2.2</version>
					</dependency>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-jdbc</artifactId>
            			<version>${spring.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>wiki</id>
			<!-- 
                This profile is for use when writing tests using the FitNesse wiki.
				Simply run 'mvn verify -P wiki' and use a browser to visit http://localhost:9123/SqlExample
			 -->
			<build>
				<plugins>
					<plugin>
						<groupId>uk.co.javahelp.fitnesse</groupId>
						<artifactId>fitnesse-launcher-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>set-up</goal>
									<goal>wiki</goal>
									<goal>tear-down</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>auto</id>
			<!-- 
                This profile will boot FitNesse to automatically run the configured test suite. Simply run 'mvn verify -P auto'
			 -->
			<build>
				<plugins>
					<plugin>
						<groupId>uk.co.javahelp.fitnesse</groupId>
						<artifactId>fitnesse-launcher-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>set-up</goal>
									<goal>run-tests</goal>
									<goal>tear-down</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
